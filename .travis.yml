# ===============================================================================
# ## "Travis CI Environment Variables"
#
# It can be two parts - `global` and `matrix`.
#
# All the `foo=bar` pair can be accessed through `process.env` if under **NodeJS**.
#   e.g. `process.env.foo`.
#
# {@link https://docs.travis-ci.com/user/environment-variables/}
# ===============================================================================
env:
  global:
    # **Encrypted** value of `TRAVIS_ENCRYPTION_KEY`.
    # `TRAVIS_ENCRYPTION_KEY` is used to help do encryption on sensitive data, like
    #   Xcode certificate and provisioning profile, etc.
    # Generated by Travis CI `travis encrypt "TRAVIS_ENCRYPTION_KEY=XXX##XXX".
    #
    # PLEASE UPDATE IT WHEN **Git repo** CHANGED!!!!
    - secure: "A+PpM51cMNIpRdNPAbHpL+uTEOev8Jau1XDp5fQaywoJTgIvFrgOYEynNUJMl+5dPicWAnanCT8m68meU6Hq9e8Ku5yt/X+UDt3SjMS51TNpO1xrl32NjySypzJNNNKgTuCeDyBKBSG7gJmT5gyeahSv2h9xrLDKUm1soh92HC7gkhdyZwfi8TDfDAHQfSQCgGIeVRZZk/IT/A2jkceOX4k5rXWjxGZ5Sshv0ekBd+/ubHydIYR7yVzD3R6QK8TOukb44z/0wUYFyLqfliibn/W2t+/jRzEeRJsUx3N6ac53556Bd4W127kO4txdSFUt9uhN+9OdjEhdGceLTqO4DWsKMutWnIfQB4RVF+kKtY+WWFniDGdlZ0Vx/3j48zrAuwCcNhPHAfRuSNQ6uDReLn4TsjBWbIbDjWL2PKXLqpBLPDbJD/Rs+ABbqlEgPfr1VOVLZQ6nxOi3XNzQ6NRqelXhJAYJLo9BAu8KKf4DOfLvLVOXJr8qQhj46RvxfNCp4DQhYpg3t8UMRDw8wpONjVLTTKUcgk2XIgFvcJnNHr38uOSJlwsQuepCCYBi4H2SLkPqTlvR6gfw8D1YmgLP22I0duLEWXp+rh88vXrb67cphAyYwU8daBUDRQ6/WxJvaCxcyxKhzDFPqoDWTbzQVWAzIiFAnRUwkJwQqwN/9Nc="

    # **Encrypted** value of `TRAVIS_ENCRYPTION_IV`.
    # `TRAVIS_ENCRYPTION_IV` is used to help do encryption on sensitive data, like
    #   Xcode certificate and provisioning profile, etc.
    # Generated by Travis CI `travis encrypt "TRAVIS_ENCRYPTION_IV=XXX##XXX".
    #
    # PLEASE UPDATE IT WHEN **Git repo** CHANGED!!!!
    secure: "emmgsAoCc5tb3sz2Y4Tqv91ndBKAatidBSNIbgGsZbC2q1TblUlTuonHNCUekJG5uf6fCb7BcRgol3JTMxtPe3QI7rRz6LMi+mEN1W/KF2r058U410kzMPUb/Ti3vPeJQNZeOb10odhBE4+E3puC+a2ggM6GMaRdew91KwWjQ52STDo0jZDltEfdZpsyXXgAASfhfV+pbnSVgHDZwl6b4yU3dz94/q5rtRzKp6J4SNGWGxCwtVSOGzDr5ijok8pkT4+PfGRMxK9Eo3f37iDk0/ipUpPONGgblXmml9Eul+hsBqR3TuFADCT/X12sGrb7zoVqO+fZGBzddouDPMf8XalT1YWUpXe+j82YnbuOzPVmQA/Wef7Yw5ah9vUa2fF/l8qyxdAty9jV13EcHkPCUmTCht+qbM6qBnQmwSMn9vR24I5CjNx+X05tPMTda1JjgF6wp8AkuqXyQbQQEGwwY1UeJTWoH+/Y42vWpBIHd0fv4EDRGEBZncXpWObyRPs1pZBE1TnU8pjIcTuPpfSYr1rsOulL75ZsxIqq6AHQpjdAPX2deno/kf8zuwkjsfg4mzqzVc/WDgOWNoJLtGa2oU/1jlJuhUuxqDr6lPlUNIlz41FtqdC7SL5u33FHYd9u8lkhfhgcPxvryh++vfLJRf84uzbcHc23W9+57i88lGU="

    # **Encrypted** value of `KEYCHAIN_PASS`.
    # `KEYCHAIN_PASS` is the **passcode** used when adding certificate to Mac OSX Keychain app.
    # Generated by Travis CI `travis encrypt "KEYCHAIN_PASS=XXX##XXX".
    #
    # PLEASE UPDATE IT WHEN **Git repo** CHANGED!!!!
    secure: "X7C/SvxMGbQOpEIwc6eMjODGeW/85yebh9H1m+2tHlMbPtCR2AO0sw23iS5JYn+zFaAuXNkpzaOxjCMdK+6+AFvp8MdjOe2vZxP9rcmz8BzE1fSvMOUC/l8EMy8w4XUHqs6vSal2lR2Mu47dalwT+2n1RZnbUo0WTa7+xkOU+Co9EqfTjaFJlrpjoBU4k/PrPigPJ/GSQfw4LdxK7FYf53HLXDamRudMKGN2zGAA7vUD4LQQuwcqkilUvjvdnqmY0OIq9WziZu9o2o7Sb+HmD3Hl1ULRblPuoGNWfp347HPuyS0IcLi9jwAXQfmMit58+07k3CkDNtJ7Xiohn3CRG5NKohg/mkaxeJ/QTb2n07JiS47KFx0DKYHtyGgRjBykQ4HblfKDCS5EDjpI8E4Rd8axdEvB6Uyap5HU5haZV2ExxC+XuBX4+DDtqZRCdl5mhMcTzRzoogiItWPpsBUzWnx8lbH1QZk27bEPHfLk/H+NANTTxo7GysJ/gL9JDQdqJ7p68olGUj+PQeS/rAeH3G1CcW0exa0ZGUUZAeXEq9BOYWPrVYpfVXctkVI7Yf0/Tq81rbnAqq/4WXkTfSNH1yzok/oxfq0GIa5ccRV1wLq1UrMHthh2fPf62pINw+d740PVzRS3wwbVFgwVVNxnPwIZ3cdhGzIhSjm/LOXzOPY="

    # Flag - if running "Unit Test"
    - UNIT_TEST=true
    # Flag - If building the app.
    - BUILD_APP=true

    # Flag - If building one iOS platform
    - iOS_BUILD=false

    # The **build target** - it determines if need to do "minification" to the code.
    # Its available options follow the setting of **Gulp Flow**.
    # Current options:  build | release
    - BUILD_TARGET="release"

    # The **build environment** - it specifies the changes (both inside app code and
    # outside build settings) based on different environments.
    # Its available options can be customized by **Gulp Flow** config file.
    # Popular options:  development | staging | test | production
    - BUILD_ENV="production"

    # Filename of the **provisioning profile** and **certificate files** (private key file and distribution certificate file).
    # Without "extension".
    # Both private key file and distribution certificate file share the **SAME** filename.
    #
    # NOTES: If the files are encrypted by `travis encrypt-file` which does not do **Base64** encoding.
    # So, when doing decoding, there is no need to add `-a` option.
    - XCODE_PROVISIONING_PROFILE_NAME="xcode-profile-release"
    - XCODE_CERT_NAME="xcode-cert-release"
    # Apple Worldwide Developer Relations Certification Authority certificate
    - XCODE_APPLE_CERT_NAME="Apple-Worldwide-Developer-Relations-Certification-Authority"

    # -------------------------------------------------------------------------------
    # Deployment - HockeyApp
    # -------------------------------------------------------------------------------

    # It MUST be the SAME as the `name` tag of `config.xml`, which is the **App Name** inside Xcode.
    - APP_NAME="Ionic Boilerplate"
    # "Release Notes" of HockeyApp
    - RELEASE_NOTES="HockeyApp Test Upload"

    # HOCKEY_APP_ID
    #
    # PLEASE UPDATE IT WHEN **Git repo** CHANGED!!!!
    - secure: "uAJoXF0jDTZivQRPN0UqXmxQOOi4QG6VdG1GeGMwhx5mXIOs7e1KWVgrDiUjVNTcez1b0qWp5YKFi2rv1/svxcln8JJDEGXeldaq/DHQmoO9o3mOm10ae5Cq8Vg/ClCB45HhqXKp+4KvwhiRUgUh5Z0b6QR1DDallJ9pHJfTW9lpz6nbK4PuIiV3pXRxexowCifbCtYjdekyrAJTz77bj2aFKAODkUBtgpflODQU8Oen0KOnQcgKSlJJmA6PUieQq9bqN54mUbZ6bjEQ1zUtHzuVVNqaSH2YKkv+Up2HFWCM/+/0tngQ1s7q27ff8BRGdFIzKZU2yWKVL5ST/y0+NmN0Mj0SBnpbxEIjofEM+ib3BQsMLm18D0iYPZYCNLCJY83abaIQRp4tidAmSVcrAmQgrWPmAsXebvX3HNb6L3dkDHKu63PDuHa8Gvl1Ia4Wnmq8dvEPTxpI3J3/wUmEIeNTeA5dMQ70KwWsd3tZ1usYLw4x9D8ZUxhL/RuLtGKSYHh3Vfx5LA+z82lYka/49xxubW6h76lj9tCQYhKtk9J+L6qJS77I1FoUztmFzqPDoFOIDSjRWKv5ja03+4yNtp9B2jYo8fbg3X6qDUjTa93C51MkWZSSX1aTAn8J0816dd5XwwmhKe0tN2Rm9kvKmBkDzl4JfwemBIFBtBR/3fU="
    # HOCKEY_APP_TOKEN
    #
    # PLEASE UPDATE IT WHEN **Git repo** CHANGED!!!!
    - secure: "wdS595kVR5FwA1JWeCHxFCgWcbbnV1gEF7Kvj27fC+7KIOLZ03lckgLkgQNiKxYh+0Qrx++/AxVwGregbeV61o3ALVn+dvkzSxpiehJYuyQ+ch5Ebm7Pfyp+3TNUdKZbD+HmbyF5ZtoV0rTHOyOrZ0cd6fYnCaviYOsOxm30fSrvwhjvBnZSm44myQG7abqcIBBbA64pn7A35jQAJPyDykUpc9tCrUzJ+1od3abM2tsNXSc/angfoPj4iZR46f1XkxhiuuHV1gvh9t/l77n6gjRWVTfk07yCz4W7rGitdOzZWYKRt5Mm7mBVjmSrTY2Nqq3JI1htjuhlcAIgxXZwe67sqd29c+5+lVna5joFC5PUwTXh07gpurNKth3NhGKdLaeHFn+UQ7396r1G+pGvsfTBgJZifiInI6FdSu/bOYDaKJ4ySpDAEbdBhQFbCNd6LnZDTCYqOa059OsUZuI9QB+NkKBRNsW6M8lZnOc6dH+bU2VX4PpiCUh+pNOO1p/bXRrJujOEuJBiSss8/YG0rzmME8QaZVr9ozClrxXzwt60m3hH4TckbOmR6Oz5tx3s5+hfukDJBYuWA9mvflUxJY/1d0HMMHAcJCd1HtavIN5VFyJXjw8RdguFUIuscVk7DfumzyTc2ZbL9Eg+bUZC46i4ysmjrbP4kX/tKXVO0ic="


# ===============================================================================
# ## "Travis CI Working Branches"
#
# It has settings for both **whitelist** (only) and **blacklist** (except)
#
# {@link https://docs.travis-ci.com/user/customizing-the-build/#Building-Specific-Branches}
# ===============================================================================
branches:
  only:
    - master
    - develop

language: objective-c

# OS
os: osx

# Xcode version
osx_image: xcode7.2

# ===============================================================================
# ## "Travis CI Cache"
#
# Trying to cache all **dependencies** by `npm install` and `bower install`
#
# {@link https://docs.travis-ci.com/user/caching/}
# ===============================================================================
cache:
  directories:
  - node_modules/*
  - bower_components/*


# ===============================================================================
# ## "Pre-setup"
#
# If `before_install`, `install` or `before_script` return a non-zero exit code,
# the build is errored and stops immediately.
# ===============================================================================

# -------------------------------------------------------------------------------
# Use `before_install` to set up **prerequisites for installing dependencies** of the build.
# e.g. Upgrade the system
before_install:
  - export LANG=en_US.UTF-8
  - brew update

# -------------------------------------------------------------------------------
# Use `install` to set up the **global** dependencies of the build.
#
install:
  # NPM global packages
  - node -v
  - npm install -g npm@3.0.0
  - npm -v

  # Install `napa` so that we can install `non-NodeJS` package under `node_modules` folder.
  - npm install -g napa
  - npm install -g gulp
  - npm install -g cordova
  - npm install -g ionic
  - npm install -g bower

  # Install `phantomjs` package globally, and then set `PHANTOMJS_BIN`.
  # Otherwise, `karma-phantomjs-launcher` will not find the PhantomJS binary to launch.
  - npm install -g phantomjs
  - export PHANTOMJS_BIN=/usr/lib/node_modules/phantomjs/lib/phantom/bin/phantomjs

  # Do a `npm update` to ensure all dependncies
  - npm update -g

  # Make sure all package works.
  - bower -v
  - gulp -v
  - cordova -v
  - ionic -v

# ===============================================================================
# ## "Script" Sequence
#
# If `script` returns a non-zero exit code, the build is failed, but continues
# to run before being marked as failed.
# ===============================================================================

# -------------------------------------------------------------------------------
# Use `before_script` to set up the **environment** before running the script.
#
# For example:
#
#   - Install local NPM packages
#   - Prepare the building certificates
#
before_script:

  # Local dependencies
  # Use `--unsafe-perm` flag to ensure `napa` is running to intall `non-nodeJS` packages.
  #
  # Ref:
  # If npm was invoked with root privileges, then it will change the uid to the user account or uid specified
  # by the `user` config, which defaults to `nobody`. Set the `unsafe-perm` flag to run scripts with root privileges.
  #
  - npm install --unsafe-perm
  - bower install --allow-root

  # Install `webdriver-manager` for protractor e2e tests
  - ./node_modules/protractor/bin/webdriver-manager update

  # ##--------##
  # Do decryption to files.
  #
  - ./env/scripts/travis-decrypt-files.sh

  # ##--------##
  # Import **build certificate** for Xcode.
  #
  - ./env/scripts/add-xcode-files.sh

# -------------------------------------------------------------------------------
# Use `script` to include the **main** running scripts.
#
# Such as:
#
#   - Running test.
#   - Build releases.
#
script:

  # Build the app from `app` folder to `www` folder.
  - ./env/scripts/build.sh

  # Single Gulp task that runs all inspects and tests, such as `lint`, `unit test`, `e2e test`.
  - ./env/scripts/run-tests.sh

  # ##--------##
  # iOS Build
  #
  - ./env/scripts/build-ios.sh


# -------------------------------------------------------------------------------
# ## "Scripts" running results.
#
# - `after_success` - Perform additional steps when your build succeeds.
# - `after_failure` - Perform additional steps when your build fails.
# The `after_success`, `after_failure`, `after_script` and subsequent stages do not affect the the build result.
#
after_success:

  # Package iOS build
  - ./env/scripts/package-ios.sh

  # Upload the iOS build to HockeyApp.
  - ./env/scripts/upload-ios-hockeyapp.sh

after_failure:

# -------------------------------------------------------------------------------
# Use `after_script` to include stages like cleanning.
#
# It’s the last step in the “normal” build process.
#
# The `after_success`, `after_failure`, `after_script` and subsequent stages do not affect the the build result.
after_script:
  # Remove the files we just added in `before_script`.
  - ./env/scripts/remove-xcode-files.sh


# ===============================================================================
# ## "Deployment"
#
# When deploying files to a provider, prevent Travis CI from resetting your working directory and deleting all changes
# made during the build (`git stash --all`) by adding `skip_cleanup` to your `.travis.yml`:
#
# If you want to make sure that this only runs if your build was successful,
# you can check the `$TRAVIS_TEST_RESULT` environment variable.
# ===============================================================================

# @optional
# You can run steps before a deploy by using the `before_deploy` phase.
# A non-zero exit code in this command will mark the build as errored.
before_deploy: false



# @optional
deploy: false
  # skip_cleanup: true

# @optional
# If there are any steps you’d like to run after the deployment, you can use the `after_deploy` phase.
after_deploy: false


# ===============================================================================
# ## "Send notificaiton"
#
# ===============================================================================

notifications:
#  hipchat: XXXXX@Your Room
